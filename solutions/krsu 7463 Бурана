/*
* by: senb1, but algorithm is not by senb1
*/

//includes
#include <algorithm>
#include <iomanip>
#include <iostream>
#include <locale>
#include <numeric>
#include <cstring>
#include <cmath>

#include <deque>
#include <list>
#include <map>
#include <stack>
#include <string>
#include <vector>
#include <array>
#include <queue>
#include <set>

using namespace std;

//macros
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define yes cout << "YES\n"
#define no cout << "NO\n"
#define fr first
#define sc second
#define endl "\n"
#define ll long long
#define ull unsigned long long
#define ld long double
#define nl cout << "\n";

const ll mod = 2022;

//functions

ll binpow(ll a, ll b) { // returns a to the power of b modulo mod
    ll res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a % mod;
        a = a * a % mod;
        b >>= 1 % mod;
    }
    return res % mod;
}

ll gcd(ll a, ll b) { // returns greatest common divisor of a and b
    if (a % b == 0)
        return b;
    if (b % a == 0)
        return a;
    if (a > b)
        return gcd(a % b, b);
    return gcd(a, b % a);
}

ll lcm(ll a, ll b) { // returns least common multiplyer of a and b
    return (a * b) / gcd(a, b);
}

bool isPrime(int x) { // checks wheather x is prime or not
    if (x <= 1) return false;
    for (int i = 2; i <= sqrt(x) + 1; i++) {
        if (x % i == 0)
            return false;
    }
    return true;
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    //cout << fixed << setprecision(12);
    //setlocale(LC_ALL, "RUS");

    ll n;
    cin >> n;
    vector<ll> v(n);
    for (int i = 0; i < n; i++)
        cin >> v[i];

    deque<ll> dq;
    ll j = 0, time = 0;
    while (j < n || !dq.empty()) {
        if ((int)dq.size() == 5) {
            time = dq.front() + 1;
            dq.pop_front();
            continue;
        }
        ll que = 1e18;
        if (j < n)
            que = max(v[j], time);
        ll out = 1e18;
        if (!dq.empty())
            out = dq.front();
        if (out <= que) {
            time = out + 1;
            dq.pop_front();
        }
        else {
            dq.push_back(max(v[j], time) + 6);
            time = max(v[j], time) + 1;
            j++;
        }
    }

    cout << time;

}

/*
 
6 10 10 10 10 10 12 

Около города Токмок стоит башня Бурана. Наверху башни помещаются не более
5 (пяти) посетителей. Посетитель, пробывший на верху башни 5 минут, должен
спуститься; пока он спускается, посетители, находящиеся внизу башни, должны ждать.
Подъём по лестнице башни и спуск по ней занимают по одной минуте. В каждый
момент на лестнице может быть только один посетитель.
Сейчас наверху башни никого нет. Дан список посетителей, идущих к башне.
По списку при первой возможности посетитель входит в башню. Через какое время
(в минутах) все посетители выйдут из башни (последний посетитель спустится
с лестницы)?

*/
